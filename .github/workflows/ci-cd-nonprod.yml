name: CI/CD Non-prod

on:
  push:
    paths:
      - 'terraform/**'
      - '.github/workflows/ci-cd-nonprod.yml'
    branches:
      - stage
  workflow_dispatch:

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID_NONPROD1 }}
  BUCKET_NAME: tf-state-nonprod1 # Replace with your bucket name.
  SA_ACC: project-service-account@nonprod1-svc-6u24.iam.gserviceaccount.com  # Replace with your service account.
  DEF_NAME: nonprod1
  CLUSTER_NAME: nonprod1-clusterk8s # Replace with your cluster name (your_cluster_name-clusterk8s).
  REGION: us-central1 # Replace with your region.
  ZONE: us-central1-a # Replace with your zone.

jobs:
  terraform-CI:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
          terraform_wrapper: false

      - name: Decode credentials
        run: echo "${{ secrets.GCP_CREDENTIALS_NONPROD1 }}" | base64 -d > credentials_file.json

      - name: Authenticate with Google Cloud
        run: |
          gcloud config set account ${SA_ACC}
          gcloud auth activate-service-account --key-file=credentials_file.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID_NONPROD1}}

      - name: Create bucket if dosn't exists
        env:
          SCRIPT_DIR: ${{ github.workspace }}/terraform/scripts
        run: bash  $SCRIPT_DIR/create-bucket.sh
          
      - name: terraform init
        run: terraform init -backend-config="bucket=${BUCKET_NAME}"

      # - name: Create Terraform variables file
      #   run: |
      #     echo "DEF_NAME=$DEF_NAME" >> $GITHUB_ENV
      #     echo "REGION=$REGION" >> $GITHUB_ENV
      #     echo "ZONE=$ZONE" >> $GITHUB_ENV
      #     echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV
      #     echo "SA_ACC=$SA_ACC" >> $GITHUB_ENV

      - name: terraform plan
        id: plan
        # run: terraform plan -lock=false -var="project_id=${{ secrets.GCP_PROJECT_ID_NONPROD1 }}" 
        # run: terraform plan -lock=false
        run: terraform plan -lock=false -var="def_name=${{ env.DEF_NAME }}" -var="project_id=${{ env.GCP_PROJECT_ID }}" -var="region_prj=${{ env.REGION }}" -var="zone_prj=${{ env.ZONE }}" -var="sa_name=${{ env.BUCKET_NAME }}" -var="sa_account=${{ env.SA_ACC }}"
        
      - name: terraform apply 
        if: "!contains(github.event.head_commit.message, 'destroy')"
        # run: terraform apply -lock=false -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID_NONPROD1 }}"
        run: terraform apply -lock=false -auto-approve

      - name: Terraform Destroy
        if: contains(github.event.head_commit.message, 'destroy')
        # run: terraform destroy -lock=false -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID_NONPROD1 }}"
        run: terraform destroy -lock=false -auto-approve